services:
  server:
    depends_on:
      - mongodb
      - broker
    build:
      context: .
      dockerfile: docker/server/Dockerfile
    container_name: grpc-server
    hostname: grpc-server
    networks:
      - dns-stream-analyzer-network
    ports:
      - "50051:50051"
  client:
    depends_on:
      - broker
    build:
      context: .
      dockerfile: docker/client/Dockerfile
    container_name: dns-client
    networks:
      - dns-stream-analyzer-network

  mongodb:
    image: "mongodb/mongodb-community-server:latest"
    container_name: mongodb
    hostname: db
    networks:
      - dns-stream-analyzer-network
    ports:
      - "27017:27017"
    volumes:
      - mongodb-dns:/data/db
  broker:
    image: "apache/kafka:latest"
    container_name: broker
    hostname: broker
    networks:
      - dns-stream-analyzer-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - kafka-dns:/data/

volumes:
  mongodb-dns: {}
  kafka-dns: {}

networks:
  dns-stream-analyzer-network:
    driver: bridge
